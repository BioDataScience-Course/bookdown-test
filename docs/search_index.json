[
["visu2.html", "Module 3 Visualisation II", " Module 3 Visualisation II Objectifs Savoir réaliser différentes variantes de graphiques tel que les histogrammes, les graphes de densité ou encore les diagrammes en violon dans R avec la fonction chart() Intégrer ensuite des graphiques dans un rapport et y décrire ce que que vous observez Gérer des conflits dans GitHub A vous de jouer ! Une nouvelle tâche va vous être demandée ci-dessous en utilisant GitHub Classroom 1.2.4.3. Cette tâche est un travail en équipe. Une fois votre assignation réalisée, faite un clone de votre dépôt et placer le dans le dossier projects. Pour cette tâche, vous démarrerez d’un projet RStudio @ref(rs_projet) Un projet sur le zooplancton provenant de Madagascar est mis à votre dispositon. Utilisez l’URL suivant qui va vous donner accès à votre tâche. Cette tâche est un travail individuel. Cette tache est un travail en binome https://classroom.github.com/g/7Ji4Aj9G Employez le projet sur la biométrie des oursins et sur le zooplancton pour découvrir les nouveaux outils graphiques décrits dans ce module. Prérequis Si ce n’est déjà fait, vous devez avoir réaliser les modules précédents. "],
["histogramme.html", "3.1 Histogramme", " 3.1 Histogramme Lors d’une expérience vous souhaitez visualiser la façon dont vos données s’étalent sur un axe (on parle de distribution1 en statistique) pour l’une des variables étudiées. L’histogramme est l’un des outils pouvant vous apporter cette information. Ce graphique va découper en plusieurs classes2 une variable numérique. Figure 3.1: Histogramme montrant la distribution de la taille d’un échantillon de zooplancton étudié par analyse d’image. Les éléments indispensables à la compréhension d’un histogramme sont (ici mis en évidence en couleur) Les axes avec les graduations (en rouge) les labels et unité des axes (en bleu) Les instructions de base afin de produire un histogramme : # Importation du jeu de données (zooplankton &lt;- read( file = &quot;zooplankton&quot;, package = &quot;data.io&quot;, lang = &quot;fr&quot;)) # # A tibble: 1,262 x 20 # ecd area perimeter feret major minor mean mode min max std_dev # &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; # 1 0.770 0.465 4.45 1.32 1.16 0.509 0.363 0.036 0.004 0.908 0.231 # 2 0.700 0.385 2.32 0.728 0.713 0.688 0.361 0.492 0.024 0.676 0.183 # 3 0.815 0.521 4.15 1.33 1.11 0.598 0.308 0.032 0.008 0.696 0.204 # 4 0.785 0.484 4.44 1.78 1.56 0.394 0.332 0.036 0.004 0.728 0.218 # 5 0.361 0.103 1.71 0.739 0.694 0.188 0.153 0.016 0.008 0.452 0.110 # 6 0.832 0.544 5.27 1.66 1.36 0.511 0.371 0.02 0.004 0.844 0.268 # 7 1.23 1.20 15.7 3.92 1.37 1.11 0.217 0.012 0.004 0.784 0.214 # 8 0.620 0.302 3.98 1.19 1.04 0.370 0.316 0.012 0.004 0.756 0.246 # 9 1.19 1.12 15.3 3.85 1.34 1.06 0.176 0.012 0.004 0.728 0.172 # 10 1.04 0.856 7.60 1.89 1.66 0.656 0.404 0.044 0.004 0.88 0.264 # # ... with 1,252 more rows, and 9 more variables: range &lt;dbl&gt;, size &lt;dbl&gt;, # # aspect &lt;dbl&gt;, elongation &lt;dbl&gt;, compactness &lt;dbl&gt;, transparency &lt;dbl&gt;, # # circularity &lt;dbl&gt;, density &lt;dbl&gt;, class &lt;fct&gt; # Réalisation du graphique chart(zooplankton, formula = ~ size) + geom_histogram(bins = 50) Figure 3.2: Instructions pour obtenir un histogramme. # bins permet de préciser le nombre de classes souhaitées La fonction chart() requiert comme argument le jeu de donnée (zooplankton, c’est un objet dataframe ou tibble dans le langage de R), ainsi que la formule à employer dans laquelle vous avez indiqué le nom de la variable que vous voulez sur l’axe des abscisses à droite de la formule. Vous voyez que le jeu de données contient beaucoup de variables (les titres des colonnes du tableau en sortie). Parmi toutes ces variables, nous avons choisi ici de représenter size, Jusqu’ici, nous avons spécifié ce que nous voulons représenter, mais pas encore comment (sous quelle apparence), nous voulons matérialiser cela sur le graphique. Pour un histogramme, nous devons ajouter la fonction geom_histogram(). L’argument bins dans cette fonction permet de préciser le nombre de classes souhaitées. Vous pouvez décrypter votre histogramme sur base des modes3 et de la symétrie4 de ces derniers. Les modes les plus fréquents sont unimodal, bimodal ou multimodal. Figure 3.3: Histogrammes montrant les modes et symétries : A. histogramme unimodal et symétrique, B. histogramme bimodal et asymétrique, C. histogramme unimodal et asymétrique, D. histogramme multimodal et symétrique. 3.1.1 Pièges et astuces 3.1.1.1 Nombres de classes d’un histogramme Vous devez être particulièrement vigilant lors de la réalisation d’un histogramme aux classes de ce dernier. # Réalisation du graphique précédent a &lt;- chart(zooplankton, formula = ~ size) + geom_histogram(bins = 50) # Modification du nombre de classes b &lt;- chart(zooplankton, formula = ~ size) + geom_histogram(bins = 20) c &lt;- chart(zooplankton, formula = ~ size) + geom_histogram(bins = 10) d &lt;- chart(zooplankton, formula = ~ size) + geom_histogram(bins = 5) # Assemblage des graphiques ggarrange(a, b, c, d, labels = &quot;AUTO&quot;, font.label = list(size = 14, align = &quot;hv&quot;)) Figure 3.4: Piège de l’histogramme. A. histogramme initial montrant la répartition des tailles au sein d’organismes planctoniques. B., C., D. Histogramme A en modifiant le nombres de classes. Comme vous pouvez le voir ci-dessus, le changement du nombre de classes peut modifier complètement la perception des données via l’histogramme. 3.1.1.2 Utilisation des snippets RStudio permet de récupérer rapidement des instructions à partir d’une banque de solutions toutes prêtes. Cela s’appelle des snippets. Vous avez une série de snippets disponibles dans la SciViews Box. Celui qui vous permet de réaliser un histogramme s’appelle .cuhist (pour chart -&gt; univariate -&gt; histogram). Entrez ce label dans une zone d’édition de code R et appuyez ensuite sur la tabulation, et vous verrez le code remplacé par ceci : chart(data = DF, ~VARNUM) + geom_histogram(binwidth = 30) L’argument binwidth = permet de préciser la largeur des classes. Vous avez à votre disposition un ensemble de snippets que vous pouvez retrouver dans l’aide-mémoire sur SciViews. Vous avez également à votre disposition l’aide-mémoire sur la visualisation des données (Data Visualization Cheat Sheet). 3.1.1.3 Histogramme par facteur Lors de l’analyse de jeux de données, vous serez amené à réaliser un histogramme par facteur (c’est-à-dire, en fonction de différents niveau d’une variable représentant des groupes). # Importation du jeu de données (iris &lt;- read(file = &quot;iris&quot;, package = &quot;datasets&quot;, lang = &quot;fr&quot;)) # # A tibble: 150 x 5 # sepal_length sepal_width petal_length petal_width species # &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; # 1 5.1 3.5 1.4 0.2 setosa # 2 4.9 3 1.4 0.2 setosa # 3 4.7 3.2 1.3 0.2 setosa # 4 4.6 3.1 1.5 0.2 setosa # 5 5 3.6 1.4 0.2 setosa # 6 5.4 3.9 1.7 0.4 setosa # 7 4.6 3.4 1.4 0.3 setosa # 8 5 3.4 1.5 0.2 setosa # 9 4.4 2.9 1.4 0.2 setosa # 10 4.9 3.1 1.5 0.1 setosa # # ... with 140 more rows # Réalisation de l&#39;histogramme par facteur chart(iris, ~ sepal_length %fill=% species) + geom_histogram() + scale_fill_viridis_d() # palette de couleur harmonieuse # `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Figure 3.5: Histogramme de la longueur des sépales de 3 espèces d’iris. La fonction chart() requiert comme argument le jeu de donnée (iris, c’est un objet dataframe ou tibble dans le langage de R), ainsi que la formule à employer dans laquelle vous avez indiqué le nom de la variable que vous voulez sur l’axe des abscisses à droite de la formule. Parmi toutes ces variables, nous avons choisi ici de représenter sepal_length. L’intérieur des barres est colorée (%fill=%) pour différencier les 3 espèces de ce jeu de données sur base de la variable species. Jusqu’ici, nous avons spécifié ce que nous voulons représenter, mais pas encore comment (sous quelle apparence), nous voulons les matérialiser sur le graphique. Pour un histogramme, nous devons ajouter la fonction geom_histogram() pour indiquer cela. La fonction scale_fill_viridis_d() permet d’obtenir des couleurs harmonieuses. Le rendu du graphique n’est pas optimal. Voici deux astuces pour l’améliorer. La premières astuces est d’employer préférentiellement les facets au lieu de l’argument %fill=% an utilisant l’opérateur | dans la formule. chart(iris, ~ sepal_length | species) + geom_histogram() # `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Figure 3.6: Histogramme de la longueur des sépales de 3 espèces d’iris en employant les facets pour séparer les espèces. L’histogramme est maintenant séparé en trois en fonction des niveaux de la variable facteur species. Simon Jackson propose une seconde solution combinant les facets et l’argument fill =. Il faut ensuite ajouter par derriere un histogramme grisé ne tenant pas compte de la variable facteur. chart(iris, formula = ~ sepal_width %fill=% species | species) + geom_histogram(data = iris[ , -c(5)] , fill = &quot;grey&quot;) + # histogramme ne tenant pas compte de la variable species geom_histogram(show.legend = FALSE) + # show.legend = FALSE permet de cacher la légende, si cette denrière n&#39;est pas informative. scale_fill_viridis_d() # `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. # `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Figure 3.7: Histogramme de la longeur des sépales de 3 espèces d’iris en employant la solution de Simon Jackson. TODO↩ TODO↩ TODO↩ TODO↩ "],
["graphique-de-densite.html", "3.2 Graphique de densité", " 3.2 Graphique de densité L’histogramme n’est pas le seul outil à votre disposition. Vous pouvez également employer le graphique de densité qui se présente un peu comme un histogramme lissé. Le passage d’un histogramme vers un graphe de densité se base sur une estimation par noyaux gaussien5 Figure 3.8: A. Histogramme et B. graphique de densité montrant la distribution de la taille d’un échantillon de zooplancton étudié par analyse d’image. Les éléments indispensables à la compréhension d’un graphique de densité sont (ici mis en évidence en couleur) : Les axes avec les graduations (en rouge) les labels et unité des axes (en bleu) Les instructions de base afin de produire un graphique de densité sont : # Importation du jeu de données (zooplankton &lt;- read( file = &quot;zooplankton&quot;, package = &quot;data.io&quot;, lang = &quot;fr&quot;)) # # A tibble: 1,262 x 20 # ecd area perimeter feret major minor mean mode min max std_dev # &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; # 1 0.770 0.465 4.45 1.32 1.16 0.509 0.363 0.036 0.004 0.908 0.231 # 2 0.700 0.385 2.32 0.728 0.713 0.688 0.361 0.492 0.024 0.676 0.183 # 3 0.815 0.521 4.15 1.33 1.11 0.598 0.308 0.032 0.008 0.696 0.204 # 4 0.785 0.484 4.44 1.78 1.56 0.394 0.332 0.036 0.004 0.728 0.218 # 5 0.361 0.103 1.71 0.739 0.694 0.188 0.153 0.016 0.008 0.452 0.110 # 6 0.832 0.544 5.27 1.66 1.36 0.511 0.371 0.02 0.004 0.844 0.268 # 7 1.23 1.20 15.7 3.92 1.37 1.11 0.217 0.012 0.004 0.784 0.214 # 8 0.620 0.302 3.98 1.19 1.04 0.370 0.316 0.012 0.004 0.756 0.246 # 9 1.19 1.12 15.3 3.85 1.34 1.06 0.176 0.012 0.004 0.728 0.172 # 10 1.04 0.856 7.60 1.89 1.66 0.656 0.404 0.044 0.004 0.88 0.264 # # ... with 1,252 more rows, and 9 more variables: range &lt;dbl&gt;, size &lt;dbl&gt;, # # aspect &lt;dbl&gt;, elongation &lt;dbl&gt;, compactness &lt;dbl&gt;, transparency &lt;dbl&gt;, # # circularity &lt;dbl&gt;, density &lt;dbl&gt;, class &lt;fct&gt; # Réalisation du graphique chart(zooplankton, formula = ~ size) + geom_density() Figure 3.9: Instructions pour obtenir un graphique de densité. La fonction chart() requiert comme argument le jeu de donnée ( dataframe, zooplankton), ainsi que la formule à employer (~ size). Pour réaliser un graphique de densité vous devez ensuite ajouter la fonction geom_density(). TODO↩ "],
["diagramme-en-violon.html", "3.3 Diagramme en violon", " 3.3 Diagramme en violon Le graphique en violon est constitué de deux graphiques de densité en miroir. LE résultat fait penser à un violon pour une distribution bimodale. Cette représentation est visuellement très convainquante lorsque la variable étudiée contient suffisamment d’onservations pour permettre de déterminer précisément sa distribution (plusieurs dizaines ou centaines d’observations). Figure 3.10: Graphe en violon de la distribution de la taille d’un échantillon de zooplancton étudié par analyse d’image. Les instructions pour produire un diagramme en violon sont : # Importation du jeu de données zooplankton &lt;- read( file = &quot;zooplankton&quot;, package = &quot;data.io&quot;, lang = &quot;fr&quot;) # Réduction du jeu de données zooplankton_sub &lt;- filter(zooplankton, class %in% c(&quot;Annelid&quot;, &quot;Calanoid&quot;, &quot;Cyclopoid&quot;, &quot;Decapod&quot;)) # Réalisation du graphique chart(zooplankton_sub, formula = size ~ class) + geom_violin() Figure 3.11: Instructions pour obtenir un diagramme en violon. La fonction chart() requiert comme argument le jeu de donnée (dataframe, zooplankton), ainsi que la formule à employer YVAR (size) ~ XVAR (class). Pour réaliser un graphique de densité vous devez ajouter la fonction geom_density(). 3.3.1 Pièges et astuces Parfois, un diagramme en violon apparait trop encombré, comme ci-dessous. chart(zooplankton, formula = size~ class) + geom_violin() Figure 3.12: Diagramme en violon montrant la densité de tailles des 17 classes d’organismes planctonique. Les libellés des classes sur l’axe X se chevauchent. La fonction coord_flip() peut améliorer le rendu du graphique en le faisant basculer de 90°. chart(zooplankton, formula = size~ class) + geom_violin() + coord_flip() Figure 3.13: Diagramme en violon montrant la densité de tailles des 17 classes d’organismes planctonique avec l’ajout de la fonction coord_flip(). Le package ggridges propose une seconde solution basée sur le principe de graphique de densité avec la fonction geom_density_ridges(). # Importation du packages library(ggridges) # Réalisation du graphique chart(zooplankton, class ~ size) + geom_density_ridges() Figure 3.14: Diagramme en violon montrant la densité de tailles des 17 classes d’organismes planctonique avec la fonction geom_density_ridges. "],
["a-vous-de-jouer-6.html", "3.4 A vous de jouer !", " 3.4 A vous de jouer ! Ouvrez RStudio dans votre SciViews Box, puis exécutez l’instruction suivante dans la fenêtre console : BioDataScience::run(&quot;...&quot;) Un squelette de projet RStudio vous a été fournit via une tâche Github Classroom, y compris une organisation des fichiers et des jeux de données types. Votre objectif est de comprendre les données proposées en utilisant des visualisations graphiques appropriées et en documentant le fruit de votre étude dans un rapport R Notebook. Utilisez l’histogramme et le graphique de densité que vous venez d’étudier bien sûr, mais vous êtes aussi encouragés à expérimenter d’autres formes de visualisations graphiques. "],
["visu3.html", "Module 4 Visualisation III", " Module 4 Visualisation III Objectifs Savoir réaliser différents graphiques comme le graphique en barre, le graphique en camembert ou encore la boite de dispersion, dans R avec la fonction chart() Arranger différents graphiques dans une figure unique. Découvrir différents systèmes graphiques (graphiques de base, lattice, ggplot2) et comparaison avec chart() Prérequis Si ce n’est déjà fait, vous devez avoir réaliser les module 2 &amp; 3. "],
["graphique-en-barre.html", "4.1 Graphique en barre", " 4.1 Graphique en barre 4.1.1 Dénombrement d’observations par facteur Vous souhaitez représenter une dénombrement des différentes niveaux d’une variables facteur. On peux l’exprimer dans R sous la forme : \\[\\sim variable \\ facteur\\] que l’on peut lire : \\[\\ en \\ fonction \\ de \\ la \\ variable \\ facteur\\] Figure 4.1: Points essentiels d’un graphique en barre montrant le dénombrement des niveaux d’une variable facteur. Les éléments indispensables à la compréhension d’un graphique en barre sont (ici mis en évidence en couleur) : les axes avec les graduations (en rouge) le label en x (en bleu) les niveaux de la variable facteur Les instructions de base afin de produire un graphique en barre sont : chart(e_m, formula = ~ e_mathaei) + geom_bar() Figure 3.1: Instructions pour obtenir un graphique en barres. La fonction chart() requiert comme argument le jeu de données (dataframe, e_m), ainsi que la formule à employer ~factor(VAR). Pour réaliser un graphique en barre, vous devez utiliser ensuite la fonction geom_bar(). 4.1.1.1 Dénombrement d’observations par plusieurs facteurs Différentes représentations sont possibles pour observer des dénombrements tenant compte de plusieurs variables facteurs. Par défaut, l’argument position a pour valeur stack. chart(diamonds, formula = ~ cut %fill=% clarity) + geom_bar() Figure 3.2: Dénombrement de l’occurence en fonction de la variable facteur cut et de la variable clarity du jeu de données diamonds. Il existe d’autres solutions en utilisant la valeur dodge ou fill pour l’argument position. b &lt;- chart(diamonds, formula = ~ cut %fill=% clarity) + geom_bar( position = &quot;dodge&quot;) c &lt;- chart(diamonds, formula = ~ cut %fill=% clarity) + geom_bar( position = &quot;fill&quot;) ggarrange(b, c, common.legend = TRUE, labels = &quot;auto&quot;) Figure 3.3: A) Graphique en barres (variable facteur cut et variable clarity avec position = &quot;dodge&quot;. B) Idem avec position = &quot;fill&quot; 4.1.1.2 Pièges et Astuces L’oeil humain perçoit plus distinctement les différences de tailles horizontales que verticales. Avec la fonction coord_flip() ajouté à votre graphique, vous pouvez effectuer une rotation des axes. chart(e_m, formula = ~ e_mathaei ) + geom_bar() + coord_flip() Figure 3.4: Graphique en barre du dénombrement de quatre variétés d’oursins. 4.1.1.3 Pour en savoir plus http://www.sthda.com/french/wiki/ggplot2-barplots-guide-de-demarrage-rapide-logiciel-r-et-visualisation-de-donnees http://ggplot2.tidyverse.org/reference/geom_bar.html http://ggplot.yhathq.com/docs/geom_bar.html 4.1.2 Valeur moyenne à l’aide d’un graphe en barre Le graphique en barres peut être employé afin de résumer des données numériques via la moyenne. Il ne s’agit plus de dénombrer les occurences d’une variable facteur mais de résumer des données numériques en fonction d’une variable facteur. On peut exprimer cette relation dans R sous la forme de \\[y \\sim x\\] que l’on peut lire : \\[y \\ en \\ fonction \\ de \\ x\\] ou encore \\[Variable \\ numérique \\ en \\ fonction \\ de \\ Variable \\ facteur\\] Considérez l’échantillon suivant : 1, 71, 55, 68, 78, 60, 83, 120, 82 ,53, 26 Calculez la moyenne sur base de la formule de la moyenne \\[\\overline{y} = \\sum_{i = 1}^n \\frac{y_i}{n}\\] # Création du vecteur x &lt;- c(1, 71, 55, 68, 78, 60, 83, 120, 82, 53, 26) # Calcul de la moyenne mean(x) # [1] 63.36364 En partant d’un jeu de données, comme celui ci dessous : Tableau 4.1: Tableau de données relatif à la croissance de dents de cochons d’Inde len supp dose 4.2 VC 0.5 22.5 VC 1.0 29.5 VC 2.0 15.2 OJ 0.5 20.0 OJ 1.0 23.0 OJ 2.0 Vous pouvez observez que ce jeu de données comprend trois variables avec une première variable portant sur le longueur des dents de cochons d’Inde, une seconde variable portant sur la supplémentation administrée ( VC, vitamine Cou OJ, jus d’orange) à ces derniers et enfin une troisième variable portant sur la dose administrée (0.5, 1, 2). Figure 3.7: Points essentiels d’un graphique en barre résumant les données numériques d’une variable facteur. Les éléments indispensables à la compréhension d’un graphe en barre sont (ici mis en évidence en couleur) : les axes avec les graduations (en rouge) les labels et unités des axes (en bleu) Les instructions de base afin de produire ce graphe en barre sont : # Importation des données tg &lt;- read(&quot;ToothGrowth&quot;, package = &quot;datasets&quot;) # Réalisation du graphique chart(tg, formula = len ~ supp) + stat_summary(geom = &quot;bar&quot;, fun.y = &quot;mean&quot;) Figure 3.8: Instructions pour obtenir un graphique en barre indiquant les moyennes par groupe. 4.1.2.1 Pièges et astuces 4.1.2.1.1 Moyenne et des barres d’erreurs chart(tg, formula = len ~ supp) + stat_summary(geom = &quot;bar&quot;, fun.y = &quot;mean&quot;) + stat_summary(geom = &quot;errorbar&quot;, fun.ymax = &quot;mean_sd&quot;) # Warning: Computation failed in `stat_summary()`: # could not find function &quot;mean_sd&quot; 4.1.2.1.2 Moyenne Le graphe en barre est un graphique très répandu dans le domaine scientifique malgré le grand nombre d’arguments contre lui que vous pouvez lire dans la section Pour en savoir plus. L’un des arguments le plus important est la faible information qu’il apporte. a &lt;- chart(ToothGrowth, formula = len ~ supp) + stat_summary(geom = &quot;bar&quot;, fun.y = &quot;mean&quot;) b &lt;- chart(ToothGrowth, formula = len ~ supp) + stat_summary(geom = &quot;point&quot;, fun.y = &quot;mean&quot;) ggarrange(a,b, labels = &quot;AUTO&quot;) Figure 3.10: moyenne de la croissance des dents de cochons d’inde en fonction du supplément admnistré (jus d’orange ou vitamine C. 4.1.2.2 Pour en savoir plus https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3148365/ https://www.r-bloggers.com/dynamite-plots-in-r/ https://pablomarin-garcia.blogspot.com/2010/02/why-dynamite-plots-are-bad.html http://biostat.mc.vanderbilt.edu/wiki/pub/Main/TatsukiRcode/Poster3.pdf http://emdbolker.wikidot.com/blog%3Adynamite "],
["visualisation-graphique-a-laide-dun-graphique-en-camembert.html", "4.2 Visualisation graphique à l’aide d’un graphique en camembert", " 4.2 Visualisation graphique à l’aide d’un graphique en camembert Le graphique en camembert va vous permettre de visualiser un dénombrement d’observations par facteur, tout comme le graphique en barre. chart(e_m, formula = ~ factor(0) %fill=% e_mathaei) + geom_bar(width = 1) + coord_polar(&quot;y&quot;, start = 0) + theme_void() + scale_fill_viridis(discrete = TRUE) Figure 3.11: Points essentiels d’un graphique en camembert montrant le dénombrement des niveaux d’une variable facteur. Les éléments indispensables à la compréhension d’un graphe en camembert sont : les niveaux de la variable facteur Les instructions de base afin de produire ce graphe en camembert sont : chart(e_m, formula = ~ factor(0) %fill=% e_mathaei) + geom_bar(width = 1) + coord_polar(&quot;y&quot;, start = 0)+ labs( x = &quot;&quot;, y = &quot;&quot;) + theme_void() + scale_fill_viridis(discrete = TRUE) Figure 3.12: Instructions 4.2.1 Pièges et astuces Le graphique en camembert est un graphique également fortement répandu. Cependant, l’oeil humain perçoit avec plus de précision les différences de formes que les différences d’angles. Un grand nombre de niveaux dans une variable facteur va avoir pour effet de remplir. De ce fait, il est donc déconseillé d’employer le graphique en camembert Partons d’un exemple fictif, combien d’observations pour la lettre h comptez vous ? fact &lt;- c(rep(x = &quot;a&quot;, times = 10), rep(x = &quot;b&quot;, times = 1), rep(x = &quot;c&quot;, times = 1), rep(x = &quot;d&quot;, times = 50), rep(x = &quot;e&quot;, times = 2), rep(x = &quot;f&quot;, times = 78), rep(x = &quot;g&quot;, times = 101), rep(x = &quot;h&quot;, times = 25) , rep(x = &quot;i&quot;, times = 31), rep(x = &quot;j&quot;, times = 49)) error &lt;- data_frame(fact = fact) chart(error, formula = ~ factor(1) %fill=% fact) + geom_bar(width = 1) + coord_polar(&quot;y&quot;, start = 0) + labs( x = &quot;&quot;, y = &quot;&quot;) + scale_fill_viridis(discrete = TRUE) Figure 3.13: Piège d’un graphique en camembert montrant le dénombrement des niveaux d’une variable facteur. Sur base de ce graphique en barre, combien d’observations pour la lettre h comptez vous ? chart(error, formula = ~ factor(fact) %fill=% fact) + geom_bar(width = 1) + scale_fill_viridis(discrete = TRUE) Figure 3.14: Piège d’un graphique en barre montrant le dénombrement des niveaux d’une variable facteur. 4.2.2 Pour en savoir plus http://www.sthda.com/french/wiki/ggplot2-graphique-en-camembert-guide-de-demarrage-rapide-logiciel-r-et-visualisation-de-donnees https://dataparkblog.wordpress.com/2017/09/24/diagramme-en-camembert-avec-r-et-ggplot/ https://www.displayr.com/why-pie-charts-are-better-than-bar-charts/ http://www.perceptualedge.com/articles/08-21-07.pdf "],
["boite-de-dispersion.html", "4.3 Boite de dispersion", " 4.3 Boite de dispersion Vous souhaitez représenter graphiquement cette fois un résumé d’une variable numérique tout en gardant un maximum d’information. La boite de dispersion est l’un des outils pouvant vous apporter la solution. Cette dernière va représenter graphiquement 5 descripteurs appelés les 5 nombres. Prenez les chiffres suivants : 1, 71, 55, 68, 78, 60, 83, 120, 82 ,53, 26 ordonnez les de manière croissante # création du vecteur x &lt;- c(1, 71, 55, 68, 78, 60, 83, 120, 82, 53, 26) # ordonner le vecteur sort(x) # [1] 1 26 53 55 60 68 71 78 82 83 120 Le premier descripteur des 5 nombres est la médiane qui se situe à la moitié des observations. median(x) # [1] 68 Le premier quartile sera la valeur au milieu des 50% des données inférieurs à la médiane et le troisième quartile est la valeur centrale sur les 50% des données supérieurs à la médiane. La valeur manimale étant la valeur la plus petite et la valeurs maximale étant la valeur la plus élevée. fivenum(x) # [1] 1 54 68 80 120 Vous pouvez réprésenter ce vecteur via une boite de dispersion Figure 4.2: Nuage de points montrant la première étape de la construction d’une boite de dispersion. La boite de dispersion représente donc les 5 nombres. Vous observez cependant que certaine valeur ne se situe pas dans la boite de dispersion, il s’agit de valeurs extrêmes. Elles sont considérées comme extrêmes car elles sont éloignées de plus 1.5 fois l’espace inter-quartile (Q3- Q1). La boite de dispersion s’arrete donc aux dernières valeurs présente dans cet espace inter-quartile (IQR). Figure 4.3: A) Nuage de points montrant la construction d’une boite de dispersion avec les 5 nombres représentés par des lignes noires. B) Boite de dispersion obtenue par rapport à la partie A. La boite de dispersion ainsi que sa description sont proposée sur le graphique ci-dessous. Figure 4.4: Points essentiels d’une boite de dispersion et sa description. Les instructions de base afin de produire une boite de dispersion sont : # Importation des données tg &lt;- read(&quot;ToothGrowth&quot;, package = &quot;datasets&quot;) # Réalisation du graphique chart(tg, formula = len ~ supp) + geom_boxplot() Figure 4.5: Instructions pour obtenir une boite de dispersion. La fonction chart() requiert comme argument le jeu de donnée (dataframe, tg), ainsi que la formule à employer YNUM (len) ~ XFACTOR (supp). Pour réaliser une boite de dispersion vous devez ajouter la seconde fonction geom_boxplot(). 4.3.1 Pièges et Astuces 4.3.1.1 Nombre d’observations par boite de disperion Lors de la réalisation de boites de dispersion, vous devez être vigilant au nombre d’observation qui se cache sous chaque boite de dispersion. En effet, une boite de dispersion ne comportant que 5 valeurs ou moins n’a que peut d’intérêt d’être avec cet outils graphique. Figure 4.6: Piège des boites de dispersion. La boite de dispersion “a” ne contient que 4 observations ce qui peut être totalement masqué par l’utilisation de boite de dispersion. Une des solutions permettant de connaitre graphiquement la nombre d’observations par boite est de l’ajouter au dessus de chaque boite avec la fonction give_n() give_n &lt;- function(x){ return(c(y = max(x)*1.20, label = length(x))) } chart(formula = len ~ supp, data = tg) + geom_boxplot() + stat_summary(fun.data = give_n, geom = &quot;text&quot;, hjust = 0.5) Figure 4.7: Boite de dispersion portant sur la croissance de dents de cochon d’Inde en fonction de la supplémentation administrée. chart(formula = len ~ supp %fill=% as.ordered(dose), data = tg) + geom_boxplot() + stat_summary(fun.data = give_n, geom = &quot;text&quot;, hjust = 0.5, position = position_dodge(0.75)) Figure 4.8: Boite de dispersion portant sur la croissance de dents de cochon d’Inde en fonction de la supplémentation et la dose administrée. 4.3.2 Pour en savoir plus ! http://www.sthda.com/french/wiki/ggplot2-box-plot-guide-de-demarrage-rapide-logiciel-r-et-visualisation-de-donnees https://plot.ly/ggplot2/box-plots/ http://www.r-graph-gallery.com/265-grouped-boxplot-with-ggplot2/ https://chemicalstatistician.wordpress.com/2013/08/12/exploratory-data-analysis-the-5-number-summary-two-different-methods-in-r-2/ "],
["multi-graphiques.html", "4.4 Multi-graphiques", " 4.4 Multi-graphiques Lorsque vous souhaitez représenter plusieurs graphiques sur une seule fenêtre graphique plusieurs fonctions sont à votre disposition. Il faut tout d’abord distinguer deux types de multi-graphiques. Soit il s’agit d’un seul graphique que vous souhaitez subdiviser par rapport à une ou deux variables facteurs. Soit il s’agit de graphiques indépendants que vous souhaitez représenter sur le même fenêtre graphique. Dans le premier cas, la fonction facet_grid() du package ggplot2 peut être employé. Dans le second cas, la fonction plot_grid() du package cowplot est l’une des alternatives possibles. 4.4.1 Facets L’une des règles les plus importantes que vous devez impérativement garder à l’eprit lors de la réalisation de vos graphiques est la simplicité. Plus votre graphique va contenir d’information au plus il sera compliqué à décoder par un collaborateur. # Importation des données ChickWeight &lt;- read(file = &quot;ChickWeight&quot;, package = &quot;datasets&quot;, lang = &quot;fr&quot;) # Réalisation du graphique chart(ChickWeight, formula = weight ~ Time) + geom_point(alpha = 0.3) Figure 4.9: Nuage de point montrant la variation de la masse de poulets au cours du temps. Le graphique ci-dessus peut par exemple être simplifié avec les facets. L’information que l’on souhaite partager est la même mais les choix graphiques rendent sa lecture plus aisée. De plus, la fentre graphique a la même taille par défault que pour un seul graphique. De ce fait, réaliser de multiples graphiques peut rendre sa lecture impossible par une taille trop faible. chart(ChickWeight, formula = weight ~ Time | Diet ) + geom_point(alpha = 0.3) Figure 4.10: Nuage de point montrant la variation de la masse de poulets au cours du temps en fonction de la supplémention (1-4). Vous observez que les échelles en abscisse et en ordonnée sont similaires. Cela permet une meilleure comparaison. 4.4.2 ggarrange() La fonctions ggarrange() du package ggpubr permet de combiner plusieurs graphiques. # Importation des données ub &lt;- read(&quot;urchin_bio&quot;, package = &quot;data.io&quot;) # Réalisation des graphiques a &lt;- chart(urchin, formula = weight ~ height %col=% origin) + geom_point() b &lt;- chart(urchin, formula = weight ~ solid_parts %col=% origin) + geom_point() # Combinaison des graphiques ggpubr::ggarrange(a, b, common.legend = TRUE, legend = &quot;bottom&quot;, align = &quot;v&quot;) Figure 4.11: A) Nuage de point montrant la variation de la masse d’oursins en fonction de la taille et de leur origine. B) Nuage de point montrant la variation de la masse d’oursins en fonction de la masse des parties solides et de leur origine. Il existe d’autres fonctions permettant de combiner plusieurs graphiquescomme plot_grid() du packagecowplot. 4.4.2.1 Pour en savoir plus ! http://www.sthda.com/french/wiki/ggplot2-facet-diviser-un-graphique-en-plusieurs-panneaux-logiciel-r-et-visualisation-de-donnees http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/ http://lightonphiri.org/blog/ggplot2-multiple-plots-in-one-graph-using-gridextra https://cran.r-project.org/web/packages/cowplot/vignettes/plot_grid.html http://www.sthda.com/english/rpkgs/ggpubr/reference/ggarrange.html "],
["differents-systemes-graphiques.html", "4.5 Différents systèmes graphiques", " 4.5 Différents systèmes graphiques Depuis le début, l’ensemble des graphiques que nous vous avons proposé utilise la fonction chart() du package chart. Cependant, il ne s’agit pas du seul outil permettant de réaliser des graphiques dans R. # Importation des données ub &lt;- read(&quot;urchin_bio&quot;, package = &quot;data.io&quot;) # Réalisation du graphique chart(ub,formula = height ~ weight %col=% origin) + geom_point() + labs( x = &quot;Poids [g]&quot;, y = &quot;Taille [mm]&quot;) Figure 4.12: Nuage de point montrant la variation de la taille en fonction du poids d’oursins et de leur origine avec le système graphique chart(). Voici d’autres alternatives que sont R de base plot(urchin$weight, urchin$height, col = urchin$origin, ylab = &quot;Taille [mm]&quot;, xlab = &quot;Poids immergé [g]&quot;) legend(x = 80, y = 10, legend = c(&quot;Farm&quot;, &quot;Fishery&quot;), col = c(&quot;Black&quot;, &quot;Red&quot;), pch = 1) Figure 4.13: Nuage de point montrant la variation de la taille en fonction du poids d’oursins et de leur origine avec le système graphique r de base. lattice theme_sciviews_lattice() xyplot( height ~ weight, data = urchin, groups = origin, ylab = &quot;Taille [mm]&quot;, xlab = &quot;Poids immergé [g]&quot;, auto.key = TRUE) Figure 4.14: Nuage de point montrant la variation de la taille en fonction du poids d’oursins et de leur origine avec le système graphique lattice. ggplot2 ggplot(data = urchin) + geom_point(mapping = aes(x = weight, y = height, color = origin)) + labs( x = &quot;Poids immergé [g]&quot;, y = &quot;Taille [mm]&quot;) Figure 4.15: Nuage de point montrant la variation de la taille en fonction du poids d’oursins et de leur origine avec le système graphique ggplot2. Vous observez rapidement certaines similitudes entre chart, ggplot2 et lattice. En effet, la package chart a pour but premier de combiner les meilleures outils présents dans chacun des modes graphiques présentés ci-dessus. 4.5.1 Pour en savoir plus http://r4ds.had.co.nz/data-visualisation.html https://flowingdata.com/2016/03/22/comparing-ggplot2-and-r-base-graphics/ https://learnr.wordpress.com/2009/08/26/ggplot2-version-of-figures-in-lattice-multivariate-data-visualization-with-r-final-part/ https://www.statmethods.net/advgraphs/trellis.html https://www.r-bloggers.com/conditioning-and-grouping-with-lattice-graphics/ http://bl.ocks.org/patilv/raw/7360425/ http://www.sthda.com/english/wiki/scatter-plots-r-base-graphs "],
["a-vous-de-jouer-7.html", "4.6 A vous de jouer !", " 4.6 A vous de jouer ! Etudiez le tutoriel suivant : BioDataScience::run(&quot;...&quot;) "],
["redaction-scientifique.html", "D Rédaction scientifique", " D Rédaction scientifique La rédaction scientifique respecte un certain caneva expliqué dans cette annexe. Pour en savoir plus… Recherche documentaire et aide à la création (ReDAC). L’Université de Mons met à disposition de ses étudiants un cours en ligne afin de trouver un maximum de renseignements sur la rédaction de rapports scientifiques. "],
["organisation.html", "D.1 Organisation", " D.1 Organisation Un rapport scientifique respecte généralement le schéma suivant : Tables des matières Introduction Matériels et méthodes Résultat Discussion Conclusion Bibliographie Annexe (si nécessaire) Pour des travaux de plus grandes ampleurs comme les travaux de fin d’études, le schéma ci-dessus est adapté en y ajoutant généralement une partie remerciement en début de manuscrit. "],
["contenu.html", "D.2 Contenu", " D.2 Contenu Le rapport sert à restituer de façon synthétique une expérience, ses résultats et les interprétations pouvant être faites. Il faut garder à l’esprit qu’un lecteur n’ayant jamais entendu parler de cette expérience doit comprendre l’intégralité du rapport. D.2.1 Tables des matières La table des matières est d’une importance capitale afin de présenter la structure de votre rapport aux lecteurs. Heureusement, il n’est pas nécessaire de l’écrire manuellement. La table des matières est générée automatiquement dans un rapport R Markdown. L’instruction à ajouter dans le préambule du document R Notebook afin d’obtenir une table des matières est toc: yes . L’instruction à ajouter en plus de toc: yes dans le préambule du document R Notebook afin d’obtenir une table des matières numéri est number_sections: yes . Il est également possible de modifier ces paramètres dans les paramètres de sortie du document comme le montre l’image ci-dessous. D.2.2 Introduction L’introduction d’un rapport d’analyse (ou d’un mémoire) a pour principal objectif de replacer l’expérience réalisée dans son contexte. La règle la plus importante est qu’un lecteur n’ayant jamais entendu parler de cette expérience doit comprendre l’intégralité du rapport. L’introduction doit donc permettre de : Remettre l’expérience dans son contexte, Décrire l’organisme étudié description de l’organisme, distribution géographique, biotope,… Notez que l’ajout d’images ou d’une carte de distribution est un plus dans la lecture d’une introduction. D.2.3 But Le but permet de synthétiser la question posée durant cette expérience en fonction du contexte de l’expérience expliqué dans l’introduction. D.2.4 Matériel &amp; méthodes Le matériel &amp; méthodes permettent de décrire les aspects techniques de l’expérience comme le matériel employé et les méthodes employées afin d’acquérir les données. Cette section est également le lieu des descriptions des méthodes d’analyse employées, des programmes utilisés,… D.2.5 Résultats Les résultats vont généralement contenir 2 parties : Description des données : exploration des données récoltées (avec graphiques et/ou estimateurs statistiques) Application des outils statistiques pertinents pour répondre à la question posée D.2.6 Discussion Cette section comprend l’interprétation biologique des résultats. En effet, il est d’une importance capitale d’avoir un regard critique sur les résultats obtenus. Exemple : Variation du pH de l’eau de mer de 8 à 6 Lors de la mesure des paramètres physicochimiques de l’eau de mer, une étude monitore le pH avec différents instruments et propose le graphique suivant : Vous observez que deux unités différentes sont étudiées (A0 et B0) et que 5 instruments différents sont employés. Ce graphique vous semble pertinent ? Aucune information qui y figure ne vous choque ? Si ce n’est pas le cas, il faut encore exercer votre oeil de biologiste. La sonde pH sur le graphique propose une valeur de pH proche de 6.5 alors que les autres instruments sont entre 7.2 et 8. Nous sommes donc passé d’un pH légérement basique à un pH acide. Les organismes présents dans les aquariums serait mort à cette valeur de pH. Elle est également le lieu de comparaison avec d’autres études dans le domaine, de la critique du design expérimental,… D.2.7 Conclusion &amp; perspective Cette section va tenir une sorte de résumé de notre expérience par rapport à au but de cette dernière et proposer des perspectives afin de continuer la recherche sur cette thématique. D.2.8 Bibliographie La rédaction de travaux s’appuye toujours sur une recherche bibliographique au préalable. Cependant, il est capital d’insérer convenablement les sources du travail au sein de la section bibliographie afin d’éviter le plagiat volontaire ou involontaire. Il existe une multitude de programme permettant la gestion d’une bibliographie comme Mendeley, Zotero ou encore Endnote. Citer ses sources dans un rapport R Notebook : page en anglais présentant la manière d’introduire une bibliographie dans un rapport R Notebook. "],
["nom-des-especes.html", "D.3 Nom des espèces", " D.3 Nom des espèces Le nom complet d’une espèce en biologie suit une convention particulière que vous devez appliquer dans toutes vos productions écrites : Partons de l’exemple de l’oursin violet, une espèce est classée de la manière suivante (Les niveaux de classification les plus importants sont mis en gras) : Règne : Animalia Sous-Embranchement : Echinozoa Embranchement : Echinodermata Classe : Echinoidea Super ordre : Echinacea Ordre : Camarodonta Infra-ordre : Echinidae Famille : Parachinidae Genre : Paracentrotus Espèce : lividus Afin de former le nom binomial de l’oursin violet, on utilise le genre et l’espèce de la classification proprosée ci-dessus : Paracentrotus lividus Le nom binomial n’est pas suffisant afin de nommer correctement une espèce. Il faut également ajouter le nom du naturaliste qui a nommé et décrit l’espèce et l’année de la publication de la discription (on parle de diagnose en biologie). Paracentrotus lividus Lamarck 1816 Lors de la première citation de l’espèce étudiée dans un rapport, il est indispensable de spécifier le nom complet de l’espèce qui sera abbrégé par la suite en P. lividus "]
]
